@using Collections.ApplicationCore.Models
@using Collections.Shared.Constants.Identity
@using Microsoft.AspNetCore.Mvc.Rendering
@model Collections.Web.Models.Collection.Items.ItemExtendedViewModel;

<!DOCTYPE html>

<html>
<head>
    <title>title</title>
</head>
<body>
<div class="container">
    <h1>@Model.Title <small class="text-muted">in collection <a asp-action="Details" asp-controller="Collections" asp-route-id="@Model.UserCollectionId" class="text-decoration-none">@Model.UserCollectionTitle</a></small></h1>
    <hr/>
    @Html.HiddenFor(m=> m.Id, new {@id="groupId"})
    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-outline-danger">Delete item</a>
    <div class="p-3">
        @foreach (var extraField in @Model.ExtraFields)
        {
            <div class="d-flex">
                <label class="me-1 text-muted">@extraField.ExtraFieldValueType!.Name:</label>
                @switch (extraField.ExtraFieldValueType!.ValueType)
                {
                    case ValueTypes.String:
                        <p>@extraField.Value</p>
                        break;
                    case ValueTypes.Binary:
                        <input type="checkbox" class="disabled" checked="@bool.Parse(extraField.Value)"/>
                        break;
                    case ValueTypes.Text:
                        <p>@extraField.Value</p>
                        break;
                    case ValueTypes.Date:
                        <p>@extraField.Value</p>
                        break;
                    case ValueTypes.Number:
                        <p>@extraField.Value</p>
                        break;
                }
            </div>
        }
        <div class="d-flex mt-3">
            <label class="me-1 text-muted">Created:</label>
            <p>@Model.AddedOn</p>
        </div>
        <div class="d-flex">
            <label class="me-1 text-muted">Updated:</label>
            <p>@Model.ModifiedOn</p>
        </div>
        <div>
            <label>Lieks:</label>
        <p></p>
            <div>
                @if (Model.Likes.All(p => p.UserProfileId != int.Parse(User.Claims.First(c => c.Type == UserClaimsConstants.UserProfileIdClaim).Value)))
                {
                    <a type="button" class="btn btn-outline-secondary" onclick="location.href = '@Url.Action("LikeItem", "Item", new {itemId = @Model.Id})'"><span class="bi bi-heart"></span> @Model.Likes.Count()</a>
                }
                else
                {
                    <a type="button" class="btn btn-outline-danger" onclick="location.href = '@Url.Action("LikeItem", "Item", new {itemId = @Model.Id})'"><span class="bi bi-heart-fill"></span> @Model.Likes.Count()</a>
                }
            </div>
            
        </div>
        
    </div>
    
</div>
<div class="container-fluid pt-3">
    <div class="container">
        <h2>
            Comments
        </h2>
        <hr/>
        <div>
            <h5>Write a comment:</h5>
            <div class="p-3">
                @using (Html.BeginForm("WriteComment", "Item", FormMethod.Post))
                {
                    @Html.Hidden("ItemId", value: @Model.Id)
                    @Html.TextArea("Body", "", new {@class="form-control mb-3", rows="5", placeholder="Write a comment"})
                    <input type="submit" class="btn btn-primary align-content-end" value="Write" id="writeComment"/>
                }
            </div>
        </div>
        <div id="comments" class="p-1">
            @foreach (var comment in @Model.Comments)
            {
                <div class="bg-light p-1 rounded-1 mb-2">
                    <div class="d-flex justify-content-between p-2">
                        <h5 class="">@comment.UserName</h5>
                        <p class="text-muted micro">@comment.AddedOn</p>
                    </div>
                    <div class="bg-white p-2">
                        <p>@comment.Body</p>
                    </div>
                </div>
            }
        </div>
       
    </div>
</div>
@section Scripts
{
    <script src="~/js/commentHubClient.js"></script>
}
</body>
</html>
